apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "myapp-docker.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ include "myapp-docker.name" . }}
    chart: {{ include "myapp-docker.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "myapp-docker.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "myapp-docker.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          env:
            - name: DATABASE_URL
              value: postgresql+asyncpg://{{ .Values.postgres.username }}:{{ .Values.postgres.password }}@postgres:5432/{{ .Values.postgres.database }}
          command: ["sh", "-c", "python create_db.py && uvicorn main:app --host 0.0.0.0 --port 8000"]

# Database Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: {{ .Values.postgres.image }}
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgres.username }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.password }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.database }}
          ports:
            - containerPort: {{ .Values.postgres.port }}
